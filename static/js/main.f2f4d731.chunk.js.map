{"version":3,"sources":["components/Card/Card.module.css","components/CardList.module.css","components/SearchBox.module.css","components/Card/Card.jsx","components/CardList.jsx","components/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Card","props","className","classes","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","changeHandler","search","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,iBAAiB,+B,gBCAnCD,EAAOC,QAAU,CAAC,YAAY,8B,gBCA9BD,EAAOC,QAAU,CAAC,OAAS,4B,+KCSZC,EARF,SAAAC,GACT,OAAO,sBAAKC,UAAWC,IAAQ,kBAAxB,UACH,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BJ,EAAMK,QAAQC,GAAxC,4BACtB,6BAAKN,EAAMK,QAAQE,OACnB,4BAAIP,EAAMK,QAAQG,Y,gBCKXC,EARE,SAAAT,GACb,OAAO,qBAAKC,UAAWC,IAAQ,aAAxB,SACDF,EAAMU,SAASC,KAAI,SAAAN,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,U,gBCSdM,EAbG,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cAChC,OACE,8BACE,uBACEb,UAAWC,IAAQa,OACnBC,KAAK,SACLH,YAAaA,EACbI,SAAUH,OCoCHI,G,wDAvCb,aAAe,IAAD,8BACZ,gBAcFJ,cAAgB,SAAAK,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEV,SAAUmB,S,oBAO/C,WACE,MAAkCC,KAAKN,MAA/Bd,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,YAEZU,EAAmBrB,EAASsB,QAAO,SAAC3B,GAAD,OACvCA,EAAQE,KAAK0B,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAKhC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEY,YAAY,kBACZC,cAAegB,KAAKhB,gBAEtB,cAAC,EAAD,CAAUJ,SAAUqB,W,GAlCVI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f2f4d731.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card-container\":\"Card_card-container__3qggz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card-list\":\"CardList_card-list__jE7ha\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"SearchBox_search__31cMv\"};","import classes from \"./Card.module.css\";\r\n\r\nconst Card = props => {\r\n    return <div className={classes[\"card-container\"]}>\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n}\r\n\r\nexport default Card;","import Card from \"./Card/Card\";\r\nimport classes from \"./CardList.module.css\";\r\n\r\nconst CardList = props => {\r\n    return <div className={classes[\"card-list\"]}>\r\n         {props.monsters.map(monster =>(\r\n          <Card key={monster.id} monster={monster}/>\r\n        ))}\r\n    </div>\r\n}\r\n\r\nexport default CardList;","import classes from \"./SearchBox.module.css\";\r\n\r\nconst SearchBox = ({ placeholder, changeHandler }) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        className={classes.search}\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={changeHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import { Component} from \"react\";\nimport CardList from \"./components/CardList\";\nimport SearchBox from \"./components/SearchBox\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  changeHandler = e => {\n    this.setState({ searchField: e.target.value });\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox\n          placeholder=\"search monsters\"\n          changeHandler={this.changeHandler}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}